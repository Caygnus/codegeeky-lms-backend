{
    "swagger": "2.0",
    "info": {
        "description": "API for CodeGeeky",
        "title": "CodeGeeky API",
        "termsOfService": "http://example.com/terms/",
        "contact": {
            "name": "API Support",
            "email": "support@example.com"
        },
        "version": "1.0"
    },
    "host": "localhost:8080",
    "basePath": "/v1",
    "paths": {
        "/auth/signup": {
            "post": {
                "description": "Signup",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Auth"
                ],
                "summary": "Signup",
                "parameters": [
                    {
                        "description": "Signup request",
                        "name": "signupRequest",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.SignupRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/dto.SignupResponse"
                        }
                    }
                }
            }
        },
        "/carts": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "List carts with optional filtering",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Cart"
                ],
                "summary": "List carts",
                "parameters": [
                    {
                        "enum": [
                            "onetime",
                            "default"
                        ],
                        "type": "string",
                        "x-enum-varnames": [
                            "CartTypeOneTime",
                            "CartTypeDefault"
                        ],
                        "name": "cart_type",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "end_time",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "entity_id",
                        "in": "query"
                    },
                    {
                        "enum": [
                            "internship_batch",
                            "course"
                        ],
                        "type": "string",
                        "x-enum-varnames": [
                            "CartLineItemEntityTypeInternshipBatch",
                            "CartLineItemEntityTypeCourse"
                        ],
                        "name": "entity_type",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "expand",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "expires_at",
                        "in": "query"
                    },
                    {
                        "maximum": 1000,
                        "minimum": 1,
                        "type": "integer",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "minimum": 0,
                        "type": "integer",
                        "name": "offset",
                        "in": "query"
                    },
                    {
                        "enum": [
                            "asc",
                            "desc"
                        ],
                        "type": "string",
                        "name": "order",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "sort",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "start_time",
                        "in": "query"
                    },
                    {
                        "enum": [
                            "published",
                            "deleted",
                            "archived",
                            "inactive",
                            "pending"
                        ],
                        "type": "string",
                        "x-enum-varnames": [
                            "StatusPublished",
                            "StatusDeleted",
                            "StatusArchived",
                            "StatusInactive",
                            "StatusPending"
                        ],
                        "name": "status",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "These fields are used to filter carts by user id",
                        "name": "user_id",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.ListCartResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ierr.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ierr.ErrorResponse"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Create a new cart with the provided details",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Cart"
                ],
                "summary": "Create a new cart",
                "parameters": [
                    {
                        "description": "Cart details",
                        "name": "cart",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.CreateCartRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/dto.CartResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ierr.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ierr.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/carts/default": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Get the default cart for the authenticated user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Cart"
                ],
                "summary": "Get user's default cart",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.CartResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ierr.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ierr.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/carts/{id}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Get a cart by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Cart"
                ],
                "summary": "Get a cart",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Cart ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.CartResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ierr.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ierr.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ierr.ErrorResponse"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Update a cart by its unique identifier",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Cart"
                ],
                "summary": "Update a cart",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Cart ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Cart details",
                        "name": "cart",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.UpdateCartRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.CartResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ierr.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ierr.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ierr.ErrorResponse"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Delete a cart by its unique identifier",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Cart"
                ],
                "summary": "Delete a cart",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Cart ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ierr.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ierr.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ierr.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/carts/{id}/line-items": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Get all line items for a specific cart",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Cart"
                ],
                "summary": "Get cart line items",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Cart ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/cart.CartLineItem"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ierr.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ierr.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ierr.ErrorResponse"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Add a new line item to a cart",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Cart"
                ],
                "summary": "Add line item to cart",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Cart ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Line item details",
                        "name": "line_item",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.CreateCartLineItemRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/cart.CartLineItem"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ierr.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ierr.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ierr.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/carts/{id}/line-items/{line_item_id}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Get a specific line item by its ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Cart"
                ],
                "summary": "Get line item",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Cart ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Line Item ID",
                        "name": "line_item_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/cart.CartLineItem"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ierr.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ierr.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ierr.ErrorResponse"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Remove a line item from a cart",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Cart"
                ],
                "summary": "Remove line item from cart",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Cart ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Line Item ID",
                        "name": "line_item_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ierr.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ierr.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ierr.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/categories": {
            "get": {
                "description": "List categories with optional filtering",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Category"
                ],
                "summary": "List categories",
                "parameters": [
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "name": "category_ids",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "end_time",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "expand",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "name": "internship_ids",
                        "in": "query"
                    },
                    {
                        "maximum": 1000,
                        "minimum": 1,
                        "type": "integer",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "These fields are used to filter categories by name",
                        "name": "name",
                        "in": "query"
                    },
                    {
                        "minimum": 0,
                        "type": "integer",
                        "name": "offset",
                        "in": "query"
                    },
                    {
                        "enum": [
                            "asc",
                            "desc"
                        ],
                        "type": "string",
                        "name": "order",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "sort",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "start_time",
                        "in": "query"
                    },
                    {
                        "enum": [
                            "published",
                            "deleted",
                            "archived",
                            "inactive",
                            "pending"
                        ],
                        "type": "string",
                        "x-enum-varnames": [
                            "StatusPublished",
                            "StatusDeleted",
                            "StatusArchived",
                            "StatusInactive",
                            "StatusPending"
                        ],
                        "name": "status",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.ListCategoryResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ierr.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ierr.ErrorResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "Create a new category with the provided details",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Category"
                ],
                "summary": "Create a new category",
                "parameters": [
                    {
                        "description": "Category details",
                        "name": "category",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.CreateCategoryRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/dto.CategoryResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ierr.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ierr.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/categories/{id}": {
            "get": {
                "description": "Get a category by its unique identifier",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Category"
                ],
                "summary": "Get a category by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Category ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.CategoryResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ierr.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ierr.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ierr.ErrorResponse"
                        }
                    }
                }
            },
            "put": {
                "description": "Update a category by its unique identifier",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Category"
                ],
                "summary": "Update a category",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Category ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Category details",
                        "name": "category",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.UpdateCategoryRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.CategoryResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ierr.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ierr.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ierr.ErrorResponse"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete a category by its unique identifier",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Category"
                ],
                "summary": "Delete a category",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Category ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ierr.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ierr.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ierr.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/discounts": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "List discounts with optional filtering",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Discount"
                ],
                "summary": "List discounts",
                "parameters": [
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "name": "codes",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "name": "discount_ids",
                        "in": "query"
                    },
                    {
                        "enum": [
                            "flat",
                            "percentage"
                        ],
                        "type": "string",
                        "x-enum-varnames": [
                            "DiscountTypeFlat",
                            "DiscountTypePercentage"
                        ],
                        "name": "discount_type",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "end_time",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "expand",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "name": "is_combinable",
                        "in": "query"
                    },
                    {
                        "maximum": 1000,
                        "minimum": 1,
                        "type": "integer",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "number",
                        "name": "min_order_value",
                        "in": "query"
                    },
                    {
                        "minimum": 0,
                        "type": "integer",
                        "name": "offset",
                        "in": "query"
                    },
                    {
                        "enum": [
                            "asc",
                            "desc"
                        ],
                        "type": "string",
                        "name": "order",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "sort",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "start_time",
                        "in": "query"
                    },
                    {
                        "enum": [
                            "published",
                            "deleted",
                            "archived",
                            "inactive",
                            "pending"
                        ],
                        "type": "string",
                        "x-enum-varnames": [
                            "StatusPublished",
                            "StatusDeleted",
                            "StatusArchived",
                            "StatusInactive",
                            "StatusPending"
                        ],
                        "name": "status",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "valid_from",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "valid_until",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.ListDiscountResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ierr.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ierr.ErrorResponse"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Create a new discount with the provided details",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Discount"
                ],
                "summary": "Create a new discount",
                "parameters": [
                    {
                        "description": "Discount details",
                        "name": "discount",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.CreateDiscountRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/dto.DiscountResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ierr.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ierr.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/discounts/code/{code}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Get a discount by its unique code",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Discount"
                ],
                "summary": "Get a discount by code",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Discount code",
                        "name": "code",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.DiscountResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ierr.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ierr.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/discounts/{id}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Get a discount by its unique identifier",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Discount"
                ],
                "summary": "Get a discount by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Discount ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.DiscountResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ierr.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ierr.ErrorResponse"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Update a discount by its unique identifier",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Discount"
                ],
                "summary": "Update a discount by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Discount ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Discount details",
                        "name": "discount",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.UpdateDiscountRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.DiscountResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ierr.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ierr.ErrorResponse"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Delete a discount by its unique identifier",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Discount"
                ],
                "summary": "Delete a discount by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Discount ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ierr.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ierr.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/internshipbatches": {
            "get": {
                "description": "List internship batches with optional filtering",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "InternshipBatch"
                ],
                "summary": "List internship batches",
                "parameters": [
                    {
                        "enum": [
                            "upcoming",
                            "ongoing",
                            "completed",
                            "cancelled"
                        ],
                        "type": "string",
                        "x-enum-varnames": [
                            "InternshipBatchStatusUpcoming",
                            "InternshipBatchStatusOngoing",
                            "InternshipBatchStatusCompleted",
                            "InternshipBatchStatusCancelled"
                        ],
                        "description": "These fields are used to filter internships by start and end date",
                        "name": "batch_status",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "end_date",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "end_time",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "expand",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "description": "These fields are used to filter internships by internship id",
                        "name": "internship_ids",
                        "in": "query"
                    },
                    {
                        "maximum": 1000,
                        "minimum": 1,
                        "type": "integer",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "These fields are used to filter internships by name",
                        "name": "name",
                        "in": "query"
                    },
                    {
                        "minimum": 0,
                        "type": "integer",
                        "name": "offset",
                        "in": "query"
                    },
                    {
                        "enum": [
                            "asc",
                            "desc"
                        ],
                        "type": "string",
                        "name": "order",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "sort",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "start_date",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "start_time",
                        "in": "query"
                    },
                    {
                        "enum": [
                            "published",
                            "deleted",
                            "archived",
                            "inactive",
                            "pending"
                        ],
                        "type": "string",
                        "x-enum-varnames": [
                            "StatusPublished",
                            "StatusDeleted",
                            "StatusArchived",
                            "StatusInactive",
                            "StatusPending"
                        ],
                        "name": "status",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.ListInternshipBatchResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ierr.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ierr.ErrorResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "Create a new internship batch with the provided details",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "InternshipBatch"
                ],
                "summary": "Create a new internship batch",
                "parameters": [
                    {
                        "description": "Internship batch details",
                        "name": "batch",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.CreateInternshipBatchRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/dto.InternshipBatchResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ierr.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ierr.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/internshipbatches/{id}": {
            "get": {
                "description": "Get an internship batch by its unique identifier",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "InternshipBatch"
                ],
                "summary": "Get an internship batch by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Internship Batch ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.InternshipBatchResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ierr.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ierr.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ierr.ErrorResponse"
                        }
                    }
                }
            },
            "put": {
                "description": "Update an internship batch by its unique identifier",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "InternshipBatch"
                ],
                "summary": "Update an internship batch",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Internship Batch ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Internship batch details",
                        "name": "batch",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.UpdateInternshipBatchRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.InternshipBatchResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ierr.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ierr.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ierr.ErrorResponse"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete an internship batch by its unique identifier",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "InternshipBatch"
                ],
                "summary": "Delete an internship batch",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Internship Batch ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ierr.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ierr.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ierr.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/internships": {
            "get": {
                "description": "List internships with optional filtering",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Internship"
                ],
                "summary": "List internships",
                "parameters": [
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "name": "category_ids",
                        "in": "query"
                    },
                    {
                        "maximum": 52,
                        "minimum": 1,
                        "type": "integer",
                        "description": "These fields are used to filter internships by duration in weeks",
                        "name": "duration_in_weeks",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "end_time",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "expand",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "name": "internship_ids",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "enum": [
                                "beginner",
                                "intermediate",
                                "advanced"
                            ],
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "name": "levels",
                        "in": "query"
                    },
                    {
                        "maximum": 1000,
                        "minimum": 1,
                        "type": "integer",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "number",
                        "description": "These fields are used to filter internships by price",
                        "name": "max_price",
                        "in": "query"
                    },
                    {
                        "type": "number",
                        "name": "min_price",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "enum": [
                                "remote",
                                "hybrid",
                                "onsite"
                            ],
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "name": "modes",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "These fields are used to filter internships by category, level and mode",
                        "name": "name",
                        "in": "query"
                    },
                    {
                        "minimum": 0,
                        "type": "integer",
                        "name": "offset",
                        "in": "query"
                    },
                    {
                        "enum": [
                            "asc",
                            "desc"
                        ],
                        "type": "string",
                        "name": "order",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "sort",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "start_time",
                        "in": "query"
                    },
                    {
                        "enum": [
                            "published",
                            "deleted",
                            "archived",
                            "inactive",
                            "pending"
                        ],
                        "type": "string",
                        "x-enum-varnames": [
                            "StatusPublished",
                            "StatusDeleted",
                            "StatusArchived",
                            "StatusInactive",
                            "StatusPending"
                        ],
                        "name": "status",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.ListInternshipResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ierr.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ierr.ErrorResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "Create a new internship with the provided details",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Internship"
                ],
                "summary": "Create a new internship",
                "parameters": [
                    {
                        "description": "Internship details",
                        "name": "internship",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.CreateInternshipRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/dto.InternshipResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ierr.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ierr.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/internships/{id}": {
            "get": {
                "description": "Get an internship by its unique identifier",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Internship"
                ],
                "summary": "Get an internship by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Internship ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.InternshipResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ierr.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ierr.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ierr.ErrorResponse"
                        }
                    }
                }
            },
            "put": {
                "description": "Update an internship by its unique identifier",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Internship"
                ],
                "summary": "Update an internship",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Internship ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Internship details",
                        "name": "internship",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.UpdateInternshipRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.InternshipResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ierr.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ierr.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ierr.ErrorResponse"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete an internship by its unique identifier",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Internship"
                ],
                "summary": "Delete an internship",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Internship ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ierr.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ierr.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ierr.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/user": {
            "put": {
                "description": "Update the current user's information",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "Update current user",
                "parameters": [
                    {
                        "description": "Update user request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.UpdateUserRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.MeResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ierr.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ierr.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/user/me": {
            "get": {
                "description": "Get the current user's information",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "Get current user",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.MeResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ierr.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ierr.ErrorResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "cart.CartLineItem": {
            "type": "object",
            "properties": {
                "cart_id": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "created_by": {
                    "type": "string"
                },
                "discount_amount": {
                    "type": "number"
                },
                "entity_id": {
                    "type": "string"
                },
                "entity_type": {
                    "$ref": "#/definitions/types.CartLineItemEntityType"
                },
                "id": {
                    "type": "string"
                },
                "metadata": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "per_unit_price": {
                    "type": "number"
                },
                "quantity": {
                    "type": "integer"
                },
                "status": {
                    "$ref": "#/definitions/types.Status"
                },
                "subtotal": {
                    "type": "number"
                },
                "tax_amount": {
                    "type": "number"
                },
                "total": {
                    "type": "number"
                },
                "updated_at": {
                    "type": "string"
                },
                "updated_by": {
                    "type": "string"
                }
            }
        },
        "dto.CartResponse": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "created_by": {
                    "type": "string"
                },
                "discount_amount": {
                    "type": "number"
                },
                "expires_at": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "line_items": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/cart.CartLineItem"
                    }
                },
                "metadata": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "status": {
                    "$ref": "#/definitions/types.Status"
                },
                "subtotal": {
                    "type": "number"
                },
                "tax_amount": {
                    "type": "number"
                },
                "total": {
                    "type": "number"
                },
                "type": {
                    "$ref": "#/definitions/types.CartType"
                },
                "updated_at": {
                    "type": "string"
                },
                "updated_by": {
                    "type": "string"
                },
                "user_id": {
                    "type": "string"
                }
            }
        },
        "dto.CategoryResponse": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "created_by": {
                    "type": "string"
                },
                "description": {
                    "description": "Description holds the value of the \"description\" field.",
                    "type": "string"
                },
                "id": {
                    "description": "ID of the ent.",
                    "type": "string"
                },
                "internships": {
                    "description": "internships holds the value of the internships edge.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/internship.Internship"
                    }
                },
                "lookup_key": {
                    "description": "LookupKey holds the value of the \"lookup_key\" field.",
                    "type": "string"
                },
                "name": {
                    "description": "Name holds the value of the \"name\" field.",
                    "type": "string"
                },
                "status": {
                    "$ref": "#/definitions/types.Status"
                },
                "updated_at": {
                    "type": "string"
                },
                "updated_by": {
                    "type": "string"
                }
            }
        },
        "dto.CreateCartLineItemRequest": {
            "type": "object",
            "required": [
                "entity_id",
                "entity_type",
                "quantity"
            ],
            "properties": {
                "cart_id": {
                    "type": "string"
                },
                "entity_id": {
                    "type": "string"
                },
                "entity_type": {
                    "$ref": "#/definitions/types.CartLineItemEntityType"
                },
                "metadata": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "quantity": {
                    "type": "integer",
                    "minimum": 1
                }
            }
        },
        "dto.CreateCartRequest": {
            "type": "object",
            "required": [
                "type"
            ],
            "properties": {
                "expires_at": {
                    "type": "string"
                },
                "line_items": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/dto.CreateCartLineItemRequest"
                    }
                },
                "metadata": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "type": {
                    "$ref": "#/definitions/types.CartType"
                }
            }
        },
        "dto.CreateCategoryRequest": {
            "type": "object",
            "required": [
                "lookup_key",
                "name"
            ],
            "properties": {
                "description": {
                    "type": "string"
                },
                "lookup_key": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "dto.CreateDiscountRequest": {
            "type": "object",
            "required": [
                "code",
                "discount_type",
                "discount_value"
            ],
            "properties": {
                "code": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "discount_type": {
                    "$ref": "#/definitions/types.DiscountType"
                },
                "discount_value": {
                    "type": "number"
                },
                "is_active": {
                    "type": "boolean"
                },
                "is_combinable": {
                    "type": "boolean"
                },
                "max_uses": {
                    "type": "integer"
                },
                "metadata": {
                    "$ref": "#/definitions/types.Metadata"
                },
                "min_order_value": {
                    "type": "number"
                },
                "valid_from": {
                    "type": "string"
                },
                "valid_until": {
                    "type": "string"
                }
            }
        },
        "dto.CreateInternshipBatchRequest": {
            "type": "object",
            "required": [
                "internship_id",
                "name"
            ],
            "properties": {
                "batch_status": {
                    "$ref": "#/definitions/types.InternshipBatchStatus"
                },
                "description": {
                    "type": "string"
                },
                "end_date": {
                    "type": "string"
                },
                "internship_id": {
                    "type": "string"
                },
                "name": {
                    "type": "string",
                    "maxLength": 255,
                    "minLength": 3
                },
                "start_date": {
                    "type": "string"
                }
            }
        },
        "dto.CreateInternshipRequest": {
            "type": "object",
            "required": [
                "currency",
                "description",
                "level",
                "lookup_key",
                "mode",
                "price",
                "title"
            ],
            "properties": {
                "benefits": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "category_ids": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "currency": {
                    "type": "string"
                },
                "description": {
                    "type": "string",
                    "minLength": 10
                },
                "duration_in_weeks": {
                    "type": "integer",
                    "minimum": 0
                },
                "flat_discount": {
                    "type": "number"
                },
                "learning_outcomes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "level": {
                    "$ref": "#/definitions/types.InternshipLevel"
                },
                "lookup_key": {
                    "type": "string"
                },
                "mode": {
                    "$ref": "#/definitions/types.InternshipMode"
                },
                "percentage_discount": {
                    "type": "number"
                },
                "prerequisites": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "price": {
                    "type": "number"
                },
                "skills": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "title": {
                    "type": "string",
                    "maxLength": 255,
                    "minLength": 3
                }
            }
        },
        "dto.DiscountResponse": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "created_by": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "discount_type": {
                    "$ref": "#/definitions/types.DiscountType"
                },
                "discount_value": {
                    "type": "number"
                },
                "id": {
                    "type": "string"
                },
                "is_active": {
                    "type": "boolean"
                },
                "is_combinable": {
                    "type": "boolean"
                },
                "max_uses": {
                    "type": "integer"
                },
                "metadata": {
                    "$ref": "#/definitions/types.Metadata"
                },
                "min_order_value": {
                    "type": "number"
                },
                "status": {
                    "$ref": "#/definitions/types.Status"
                },
                "updated_at": {
                    "type": "string"
                },
                "updated_by": {
                    "type": "string"
                },
                "valid_from": {
                    "type": "string"
                },
                "valid_until": {
                    "type": "string"
                }
            }
        },
        "dto.InternshipBatchResponse": {
            "type": "object",
            "properties": {
                "batch_status": {
                    "$ref": "#/definitions/types.InternshipBatchStatus"
                },
                "created_at": {
                    "type": "string"
                },
                "created_by": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "end_date": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "internship_id": {
                    "type": "string"
                },
                "metadata": {
                    "$ref": "#/definitions/types.Metadata"
                },
                "name": {
                    "type": "string"
                },
                "start_date": {
                    "type": "string"
                },
                "status": {
                    "$ref": "#/definitions/types.Status"
                },
                "updated_at": {
                    "type": "string"
                },
                "updated_by": {
                    "type": "string"
                }
            }
        },
        "dto.InternshipResponse": {
            "type": "object",
            "properties": {
                "benefits": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "categories": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/internship.Category"
                    }
                },
                "created_at": {
                    "type": "string"
                },
                "created_by": {
                    "type": "string"
                },
                "currency": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "duration_in_weeks": {
                    "type": "integer"
                },
                "flat_discount": {
                    "type": "number"
                },
                "id": {
                    "type": "string"
                },
                "learning_outcomes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "level": {
                    "$ref": "#/definitions/types.InternshipLevel"
                },
                "lookup_key": {
                    "type": "string"
                },
                "mode": {
                    "$ref": "#/definitions/types.InternshipMode"
                },
                "percentage_discount": {
                    "type": "number"
                },
                "prerequisites": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "price": {
                    "type": "number"
                },
                "skills": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "status": {
                    "$ref": "#/definitions/types.Status"
                },
                "subtotal": {
                    "type": "number"
                },
                "title": {
                    "type": "string"
                },
                "total": {
                    "type": "number"
                },
                "updated_at": {
                    "type": "string"
                },
                "updated_by": {
                    "type": "string"
                }
            }
        },
        "dto.ListCartResponse": {
            "type": "object",
            "properties": {
                "items": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/dto.CartResponse"
                    }
                },
                "pagination": {
                    "$ref": "#/definitions/types.PaginationResponse"
                }
            }
        },
        "dto.ListCategoryResponse": {
            "type": "object",
            "properties": {
                "items": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/dto.CategoryResponse"
                    }
                },
                "pagination": {
                    "$ref": "#/definitions/types.PaginationResponse"
                }
            }
        },
        "dto.ListDiscountResponse": {
            "type": "object",
            "properties": {
                "items": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/dto.DiscountResponse"
                    }
                },
                "pagination": {
                    "$ref": "#/definitions/types.PaginationResponse"
                }
            }
        },
        "dto.ListInternshipBatchResponse": {
            "type": "object",
            "properties": {
                "items": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/dto.InternshipBatchResponse"
                    }
                },
                "pagination": {
                    "$ref": "#/definitions/types.PaginationResponse"
                }
            }
        },
        "dto.ListInternshipResponse": {
            "type": "object",
            "properties": {
                "items": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/dto.InternshipResponse"
                    }
                },
                "pagination": {
                    "$ref": "#/definitions/types.PaginationResponse"
                }
            }
        },
        "dto.MeResponse": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string"
                },
                "full_name": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "phone": {
                    "type": "string"
                },
                "role": {
                    "type": "string"
                }
            }
        },
        "dto.SignupRequest": {
            "type": "object",
            "required": [
                "access_token",
                "email",
                "full_name",
                "role"
            ],
            "properties": {
                "access_token": {
                    "description": "access token",
                    "type": "string"
                },
                "email": {
                    "description": "basic info",
                    "type": "string"
                },
                "full_name": {
                    "type": "string"
                },
                "phone": {
                    "type": "string"
                },
                "role": {
                    "description": "role",
                    "$ref": "#/definitions/types.UserRole"
                }
            }
        },
        "dto.SignupResponse": {
            "type": "object",
            "properties": {
                "access_token": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                }
            }
        },
        "dto.UpdateCartRequest": {
            "type": "object",
            "properties": {
                "expires_at": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "line_items": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/dto.CreateCartLineItemRequest"
                    }
                },
                "metadata": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                }
            }
        },
        "dto.UpdateCategoryRequest": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string"
                },
                "lookup_key": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "dto.UpdateDiscountRequest": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string"
                },
                "is_active": {
                    "type": "boolean"
                },
                "is_combinable": {
                    "type": "boolean"
                },
                "max_uses": {
                    "type": "integer"
                },
                "metadata": {
                    "$ref": "#/definitions/types.Metadata"
                },
                "min_order_value": {
                    "type": "number"
                },
                "valid_from": {
                    "type": "string"
                },
                "valid_until": {
                    "type": "string"
                }
            }
        },
        "dto.UpdateInternshipBatchRequest": {
            "type": "object",
            "properties": {
                "batch_status": {
                    "$ref": "#/definitions/types.InternshipBatchStatus"
                },
                "description": {
                    "type": "string"
                },
                "end_date": {
                    "type": "string"
                },
                "name": {
                    "type": "string",
                    "maxLength": 255,
                    "minLength": 3
                },
                "start_date": {
                    "type": "string"
                }
            }
        },
        "dto.UpdateInternshipRequest": {
            "type": "object",
            "properties": {
                "benefits": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "category_ids": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "currency": {
                    "type": "string"
                },
                "description": {
                    "type": "string",
                    "minLength": 10
                },
                "duration_in_weeks": {
                    "type": "integer",
                    "minimum": 0
                },
                "flat_discount": {
                    "type": "number"
                },
                "learning_outcomes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "level": {
                    "$ref": "#/definitions/types.InternshipLevel"
                },
                "lookup_key": {
                    "type": "string"
                },
                "mode": {
                    "$ref": "#/definitions/types.InternshipMode"
                },
                "percentage_discount": {
                    "type": "number"
                },
                "prerequisites": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "price": {
                    "type": "number"
                },
                "skills": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "title": {
                    "type": "string",
                    "maxLength": 255,
                    "minLength": 3
                }
            }
        },
        "dto.UpdateUserRequest": {
            "type": "object",
            "properties": {
                "full_name": {
                    "type": "string"
                },
                "phone": {
                    "type": "string"
                }
            }
        },
        "ierr.ErrorDetail": {
            "type": "object",
            "properties": {
                "details": {
                    "type": "object",
                    "additionalProperties": {}
                },
                "internal_error": {
                    "type": "string"
                },
                "message": {
                    "type": "string"
                }
            }
        },
        "ierr.ErrorResponse": {
            "type": "object",
            "properties": {
                "error": {
                    "$ref": "#/definitions/ierr.ErrorDetail"
                },
                "success": {
                    "type": "boolean"
                }
            }
        },
        "internship.Category": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "created_by": {
                    "type": "string"
                },
                "description": {
                    "description": "Description holds the value of the \"description\" field.",
                    "type": "string"
                },
                "id": {
                    "description": "ID of the ent.",
                    "type": "string"
                },
                "internships": {
                    "description": "internships holds the value of the internships edge.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/internship.Internship"
                    }
                },
                "lookup_key": {
                    "description": "LookupKey holds the value of the \"lookup_key\" field.",
                    "type": "string"
                },
                "name": {
                    "description": "Name holds the value of the \"name\" field.",
                    "type": "string"
                },
                "status": {
                    "$ref": "#/definitions/types.Status"
                },
                "updated_at": {
                    "type": "string"
                },
                "updated_by": {
                    "type": "string"
                }
            }
        },
        "internship.Internship": {
            "type": "object",
            "properties": {
                "benefits": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "categories": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/internship.Category"
                    }
                },
                "created_at": {
                    "type": "string"
                },
                "created_by": {
                    "type": "string"
                },
                "currency": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "duration_in_weeks": {
                    "type": "integer"
                },
                "flat_discount": {
                    "type": "number"
                },
                "id": {
                    "type": "string"
                },
                "learning_outcomes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "level": {
                    "$ref": "#/definitions/types.InternshipLevel"
                },
                "lookup_key": {
                    "type": "string"
                },
                "mode": {
                    "$ref": "#/definitions/types.InternshipMode"
                },
                "percentage_discount": {
                    "type": "number"
                },
                "prerequisites": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "price": {
                    "type": "number"
                },
                "skills": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "status": {
                    "$ref": "#/definitions/types.Status"
                },
                "subtotal": {
                    "type": "number"
                },
                "title": {
                    "type": "string"
                },
                "total": {
                    "type": "number"
                },
                "updated_at": {
                    "type": "string"
                },
                "updated_by": {
                    "type": "string"
                }
            }
        },
        "types.CartLineItemEntityType": {
            "type": "string",
            "enum": [
                "internship_batch",
                "course"
            ],
            "x-enum-varnames": [
                "CartLineItemEntityTypeInternshipBatch",
                "CartLineItemEntityTypeCourse"
            ]
        },
        "types.CartType": {
            "type": "string",
            "enum": [
                "onetime",
                "default"
            ],
            "x-enum-varnames": [
                "CartTypeOneTime",
                "CartTypeDefault"
            ]
        },
        "types.DiscountType": {
            "type": "string",
            "enum": [
                "flat",
                "percentage"
            ],
            "x-enum-varnames": [
                "DiscountTypeFlat",
                "DiscountTypePercentage"
            ]
        },
        "types.InternshipBatchStatus": {
            "type": "string",
            "enum": [
                "upcoming",
                "ongoing",
                "completed",
                "cancelled"
            ],
            "x-enum-varnames": [
                "InternshipBatchStatusUpcoming",
                "InternshipBatchStatusOngoing",
                "InternshipBatchStatusCompleted",
                "InternshipBatchStatusCancelled"
            ]
        },
        "types.InternshipLevel": {
            "type": "string",
            "enum": [
                "beginner",
                "intermediate",
                "advanced"
            ],
            "x-enum-varnames": [
                "InternshipLevelBeginner",
                "InternshipLevelIntermediate",
                "InternshipLevelAdvanced"
            ]
        },
        "types.InternshipMode": {
            "type": "string",
            "enum": [
                "remote",
                "hybrid",
                "onsite"
            ],
            "x-enum-varnames": [
                "InternshipModeRemote",
                "InternshipModeHybrid",
                "InternshipModeOnsite"
            ]
        },
        "types.Metadata": {
            "type": "object",
            "additionalProperties": {
                "type": "string"
            }
        },
        "types.PaginationResponse": {
            "type": "object",
            "properties": {
                "limit": {
                    "type": "integer"
                },
                "offset": {
                    "type": "integer"
                },
                "total": {
                    "type": "integer"
                }
            }
        },
        "types.Status": {
            "type": "string",
            "enum": [
                "published",
                "deleted",
                "archived",
                "inactive",
                "pending"
            ],
            "x-enum-varnames": [
                "StatusPublished",
                "StatusDeleted",
                "StatusArchived",
                "StatusInactive",
                "StatusPending"
            ]
        },
        "types.UserRole": {
            "type": "string",
            "enum": [
                "ADMIN",
                "STUDENT",
                "INSTRUCTOR",
                "ADMIN"
            ],
            "x-enum-varnames": [
                "DefaultUserRole",
                "UserRoleStudent",
                "UserRoleInstructor",
                "UserRoleAdmin"
            ]
        }
    },
    "securityDefinitions": {
        "Authorization": {
            "description": "Enter the token with the `Bearer ` prefix, e.g. `Bearer \u003ctoken\u003e`.",
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    }
}