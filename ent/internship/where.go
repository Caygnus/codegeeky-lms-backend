// Code generated by ent, DO NOT EDIT.

package internship

import (
	"time"

	"entgo.io/ent/dialect/sql"
	"entgo.io/ent/dialect/sql/sqlgraph"
	"github.com/omkar273/codegeeky/ent/predicate"
	"github.com/shopspring/decimal"
)

// ID filters vertices based on their ID field.
func ID(id string) predicate.Internship {
	return predicate.Internship(sql.FieldEQ(FieldID, id))
}

// IDEQ applies the EQ predicate on the ID field.
func IDEQ(id string) predicate.Internship {
	return predicate.Internship(sql.FieldEQ(FieldID, id))
}

// IDNEQ applies the NEQ predicate on the ID field.
func IDNEQ(id string) predicate.Internship {
	return predicate.Internship(sql.FieldNEQ(FieldID, id))
}

// IDIn applies the In predicate on the ID field.
func IDIn(ids ...string) predicate.Internship {
	return predicate.Internship(sql.FieldIn(FieldID, ids...))
}

// IDNotIn applies the NotIn predicate on the ID field.
func IDNotIn(ids ...string) predicate.Internship {
	return predicate.Internship(sql.FieldNotIn(FieldID, ids...))
}

// IDGT applies the GT predicate on the ID field.
func IDGT(id string) predicate.Internship {
	return predicate.Internship(sql.FieldGT(FieldID, id))
}

// IDGTE applies the GTE predicate on the ID field.
func IDGTE(id string) predicate.Internship {
	return predicate.Internship(sql.FieldGTE(FieldID, id))
}

// IDLT applies the LT predicate on the ID field.
func IDLT(id string) predicate.Internship {
	return predicate.Internship(sql.FieldLT(FieldID, id))
}

// IDLTE applies the LTE predicate on the ID field.
func IDLTE(id string) predicate.Internship {
	return predicate.Internship(sql.FieldLTE(FieldID, id))
}

// IDEqualFold applies the EqualFold predicate on the ID field.
func IDEqualFold(id string) predicate.Internship {
	return predicate.Internship(sql.FieldEqualFold(FieldID, id))
}

// IDContainsFold applies the ContainsFold predicate on the ID field.
func IDContainsFold(id string) predicate.Internship {
	return predicate.Internship(sql.FieldContainsFold(FieldID, id))
}

// Status applies equality check predicate on the "status" field. It's identical to StatusEQ.
func Status(v string) predicate.Internship {
	return predicate.Internship(sql.FieldEQ(FieldStatus, v))
}

// CreatedAt applies equality check predicate on the "created_at" field. It's identical to CreatedAtEQ.
func CreatedAt(v time.Time) predicate.Internship {
	return predicate.Internship(sql.FieldEQ(FieldCreatedAt, v))
}

// UpdatedAt applies equality check predicate on the "updated_at" field. It's identical to UpdatedAtEQ.
func UpdatedAt(v time.Time) predicate.Internship {
	return predicate.Internship(sql.FieldEQ(FieldUpdatedAt, v))
}

// CreatedBy applies equality check predicate on the "created_by" field. It's identical to CreatedByEQ.
func CreatedBy(v string) predicate.Internship {
	return predicate.Internship(sql.FieldEQ(FieldCreatedBy, v))
}

// UpdatedBy applies equality check predicate on the "updated_by" field. It's identical to UpdatedByEQ.
func UpdatedBy(v string) predicate.Internship {
	return predicate.Internship(sql.FieldEQ(FieldUpdatedBy, v))
}

// Title applies equality check predicate on the "title" field. It's identical to TitleEQ.
func Title(v string) predicate.Internship {
	return predicate.Internship(sql.FieldEQ(FieldTitle, v))
}

// LookupKey applies equality check predicate on the "lookup_key" field. It's identical to LookupKeyEQ.
func LookupKey(v string) predicate.Internship {
	return predicate.Internship(sql.FieldEQ(FieldLookupKey, v))
}

// Description applies equality check predicate on the "description" field. It's identical to DescriptionEQ.
func Description(v string) predicate.Internship {
	return predicate.Internship(sql.FieldEQ(FieldDescription, v))
}

// Level applies equality check predicate on the "level" field. It's identical to LevelEQ.
func Level(v string) predicate.Internship {
	return predicate.Internship(sql.FieldEQ(FieldLevel, v))
}

// Mode applies equality check predicate on the "mode" field. It's identical to ModeEQ.
func Mode(v string) predicate.Internship {
	return predicate.Internship(sql.FieldEQ(FieldMode, v))
}

// DurationInWeeks applies equality check predicate on the "duration_in_weeks" field. It's identical to DurationInWeeksEQ.
func DurationInWeeks(v int) predicate.Internship {
	return predicate.Internship(sql.FieldEQ(FieldDurationInWeeks, v))
}

// Currency applies equality check predicate on the "currency" field. It's identical to CurrencyEQ.
func Currency(v string) predicate.Internship {
	return predicate.Internship(sql.FieldEQ(FieldCurrency, v))
}

// Price applies equality check predicate on the "price" field. It's identical to PriceEQ.
func Price(v decimal.Decimal) predicate.Internship {
	return predicate.Internship(sql.FieldEQ(FieldPrice, v))
}

// FlatDiscount applies equality check predicate on the "flat_discount" field. It's identical to FlatDiscountEQ.
func FlatDiscount(v decimal.Decimal) predicate.Internship {
	return predicate.Internship(sql.FieldEQ(FieldFlatDiscount, v))
}

// PercentageDiscount applies equality check predicate on the "percentage_discount" field. It's identical to PercentageDiscountEQ.
func PercentageDiscount(v decimal.Decimal) predicate.Internship {
	return predicate.Internship(sql.FieldEQ(FieldPercentageDiscount, v))
}

// StatusEQ applies the EQ predicate on the "status" field.
func StatusEQ(v string) predicate.Internship {
	return predicate.Internship(sql.FieldEQ(FieldStatus, v))
}

// StatusNEQ applies the NEQ predicate on the "status" field.
func StatusNEQ(v string) predicate.Internship {
	return predicate.Internship(sql.FieldNEQ(FieldStatus, v))
}

// StatusIn applies the In predicate on the "status" field.
func StatusIn(vs ...string) predicate.Internship {
	return predicate.Internship(sql.FieldIn(FieldStatus, vs...))
}

// StatusNotIn applies the NotIn predicate on the "status" field.
func StatusNotIn(vs ...string) predicate.Internship {
	return predicate.Internship(sql.FieldNotIn(FieldStatus, vs...))
}

// StatusGT applies the GT predicate on the "status" field.
func StatusGT(v string) predicate.Internship {
	return predicate.Internship(sql.FieldGT(FieldStatus, v))
}

// StatusGTE applies the GTE predicate on the "status" field.
func StatusGTE(v string) predicate.Internship {
	return predicate.Internship(sql.FieldGTE(FieldStatus, v))
}

// StatusLT applies the LT predicate on the "status" field.
func StatusLT(v string) predicate.Internship {
	return predicate.Internship(sql.FieldLT(FieldStatus, v))
}

// StatusLTE applies the LTE predicate on the "status" field.
func StatusLTE(v string) predicate.Internship {
	return predicate.Internship(sql.FieldLTE(FieldStatus, v))
}

// StatusContains applies the Contains predicate on the "status" field.
func StatusContains(v string) predicate.Internship {
	return predicate.Internship(sql.FieldContains(FieldStatus, v))
}

// StatusHasPrefix applies the HasPrefix predicate on the "status" field.
func StatusHasPrefix(v string) predicate.Internship {
	return predicate.Internship(sql.FieldHasPrefix(FieldStatus, v))
}

// StatusHasSuffix applies the HasSuffix predicate on the "status" field.
func StatusHasSuffix(v string) predicate.Internship {
	return predicate.Internship(sql.FieldHasSuffix(FieldStatus, v))
}

// StatusEqualFold applies the EqualFold predicate on the "status" field.
func StatusEqualFold(v string) predicate.Internship {
	return predicate.Internship(sql.FieldEqualFold(FieldStatus, v))
}

// StatusContainsFold applies the ContainsFold predicate on the "status" field.
func StatusContainsFold(v string) predicate.Internship {
	return predicate.Internship(sql.FieldContainsFold(FieldStatus, v))
}

// CreatedAtEQ applies the EQ predicate on the "created_at" field.
func CreatedAtEQ(v time.Time) predicate.Internship {
	return predicate.Internship(sql.FieldEQ(FieldCreatedAt, v))
}

// CreatedAtNEQ applies the NEQ predicate on the "created_at" field.
func CreatedAtNEQ(v time.Time) predicate.Internship {
	return predicate.Internship(sql.FieldNEQ(FieldCreatedAt, v))
}

// CreatedAtIn applies the In predicate on the "created_at" field.
func CreatedAtIn(vs ...time.Time) predicate.Internship {
	return predicate.Internship(sql.FieldIn(FieldCreatedAt, vs...))
}

// CreatedAtNotIn applies the NotIn predicate on the "created_at" field.
func CreatedAtNotIn(vs ...time.Time) predicate.Internship {
	return predicate.Internship(sql.FieldNotIn(FieldCreatedAt, vs...))
}

// CreatedAtGT applies the GT predicate on the "created_at" field.
func CreatedAtGT(v time.Time) predicate.Internship {
	return predicate.Internship(sql.FieldGT(FieldCreatedAt, v))
}

// CreatedAtGTE applies the GTE predicate on the "created_at" field.
func CreatedAtGTE(v time.Time) predicate.Internship {
	return predicate.Internship(sql.FieldGTE(FieldCreatedAt, v))
}

// CreatedAtLT applies the LT predicate on the "created_at" field.
func CreatedAtLT(v time.Time) predicate.Internship {
	return predicate.Internship(sql.FieldLT(FieldCreatedAt, v))
}

// CreatedAtLTE applies the LTE predicate on the "created_at" field.
func CreatedAtLTE(v time.Time) predicate.Internship {
	return predicate.Internship(sql.FieldLTE(FieldCreatedAt, v))
}

// UpdatedAtEQ applies the EQ predicate on the "updated_at" field.
func UpdatedAtEQ(v time.Time) predicate.Internship {
	return predicate.Internship(sql.FieldEQ(FieldUpdatedAt, v))
}

// UpdatedAtNEQ applies the NEQ predicate on the "updated_at" field.
func UpdatedAtNEQ(v time.Time) predicate.Internship {
	return predicate.Internship(sql.FieldNEQ(FieldUpdatedAt, v))
}

// UpdatedAtIn applies the In predicate on the "updated_at" field.
func UpdatedAtIn(vs ...time.Time) predicate.Internship {
	return predicate.Internship(sql.FieldIn(FieldUpdatedAt, vs...))
}

// UpdatedAtNotIn applies the NotIn predicate on the "updated_at" field.
func UpdatedAtNotIn(vs ...time.Time) predicate.Internship {
	return predicate.Internship(sql.FieldNotIn(FieldUpdatedAt, vs...))
}

// UpdatedAtGT applies the GT predicate on the "updated_at" field.
func UpdatedAtGT(v time.Time) predicate.Internship {
	return predicate.Internship(sql.FieldGT(FieldUpdatedAt, v))
}

// UpdatedAtGTE applies the GTE predicate on the "updated_at" field.
func UpdatedAtGTE(v time.Time) predicate.Internship {
	return predicate.Internship(sql.FieldGTE(FieldUpdatedAt, v))
}

// UpdatedAtLT applies the LT predicate on the "updated_at" field.
func UpdatedAtLT(v time.Time) predicate.Internship {
	return predicate.Internship(sql.FieldLT(FieldUpdatedAt, v))
}

// UpdatedAtLTE applies the LTE predicate on the "updated_at" field.
func UpdatedAtLTE(v time.Time) predicate.Internship {
	return predicate.Internship(sql.FieldLTE(FieldUpdatedAt, v))
}

// CreatedByEQ applies the EQ predicate on the "created_by" field.
func CreatedByEQ(v string) predicate.Internship {
	return predicate.Internship(sql.FieldEQ(FieldCreatedBy, v))
}

// CreatedByNEQ applies the NEQ predicate on the "created_by" field.
func CreatedByNEQ(v string) predicate.Internship {
	return predicate.Internship(sql.FieldNEQ(FieldCreatedBy, v))
}

// CreatedByIn applies the In predicate on the "created_by" field.
func CreatedByIn(vs ...string) predicate.Internship {
	return predicate.Internship(sql.FieldIn(FieldCreatedBy, vs...))
}

// CreatedByNotIn applies the NotIn predicate on the "created_by" field.
func CreatedByNotIn(vs ...string) predicate.Internship {
	return predicate.Internship(sql.FieldNotIn(FieldCreatedBy, vs...))
}

// CreatedByGT applies the GT predicate on the "created_by" field.
func CreatedByGT(v string) predicate.Internship {
	return predicate.Internship(sql.FieldGT(FieldCreatedBy, v))
}

// CreatedByGTE applies the GTE predicate on the "created_by" field.
func CreatedByGTE(v string) predicate.Internship {
	return predicate.Internship(sql.FieldGTE(FieldCreatedBy, v))
}

// CreatedByLT applies the LT predicate on the "created_by" field.
func CreatedByLT(v string) predicate.Internship {
	return predicate.Internship(sql.FieldLT(FieldCreatedBy, v))
}

// CreatedByLTE applies the LTE predicate on the "created_by" field.
func CreatedByLTE(v string) predicate.Internship {
	return predicate.Internship(sql.FieldLTE(FieldCreatedBy, v))
}

// CreatedByContains applies the Contains predicate on the "created_by" field.
func CreatedByContains(v string) predicate.Internship {
	return predicate.Internship(sql.FieldContains(FieldCreatedBy, v))
}

// CreatedByHasPrefix applies the HasPrefix predicate on the "created_by" field.
func CreatedByHasPrefix(v string) predicate.Internship {
	return predicate.Internship(sql.FieldHasPrefix(FieldCreatedBy, v))
}

// CreatedByHasSuffix applies the HasSuffix predicate on the "created_by" field.
func CreatedByHasSuffix(v string) predicate.Internship {
	return predicate.Internship(sql.FieldHasSuffix(FieldCreatedBy, v))
}

// CreatedByIsNil applies the IsNil predicate on the "created_by" field.
func CreatedByIsNil() predicate.Internship {
	return predicate.Internship(sql.FieldIsNull(FieldCreatedBy))
}

// CreatedByNotNil applies the NotNil predicate on the "created_by" field.
func CreatedByNotNil() predicate.Internship {
	return predicate.Internship(sql.FieldNotNull(FieldCreatedBy))
}

// CreatedByEqualFold applies the EqualFold predicate on the "created_by" field.
func CreatedByEqualFold(v string) predicate.Internship {
	return predicate.Internship(sql.FieldEqualFold(FieldCreatedBy, v))
}

// CreatedByContainsFold applies the ContainsFold predicate on the "created_by" field.
func CreatedByContainsFold(v string) predicate.Internship {
	return predicate.Internship(sql.FieldContainsFold(FieldCreatedBy, v))
}

// UpdatedByEQ applies the EQ predicate on the "updated_by" field.
func UpdatedByEQ(v string) predicate.Internship {
	return predicate.Internship(sql.FieldEQ(FieldUpdatedBy, v))
}

// UpdatedByNEQ applies the NEQ predicate on the "updated_by" field.
func UpdatedByNEQ(v string) predicate.Internship {
	return predicate.Internship(sql.FieldNEQ(FieldUpdatedBy, v))
}

// UpdatedByIn applies the In predicate on the "updated_by" field.
func UpdatedByIn(vs ...string) predicate.Internship {
	return predicate.Internship(sql.FieldIn(FieldUpdatedBy, vs...))
}

// UpdatedByNotIn applies the NotIn predicate on the "updated_by" field.
func UpdatedByNotIn(vs ...string) predicate.Internship {
	return predicate.Internship(sql.FieldNotIn(FieldUpdatedBy, vs...))
}

// UpdatedByGT applies the GT predicate on the "updated_by" field.
func UpdatedByGT(v string) predicate.Internship {
	return predicate.Internship(sql.FieldGT(FieldUpdatedBy, v))
}

// UpdatedByGTE applies the GTE predicate on the "updated_by" field.
func UpdatedByGTE(v string) predicate.Internship {
	return predicate.Internship(sql.FieldGTE(FieldUpdatedBy, v))
}

// UpdatedByLT applies the LT predicate on the "updated_by" field.
func UpdatedByLT(v string) predicate.Internship {
	return predicate.Internship(sql.FieldLT(FieldUpdatedBy, v))
}

// UpdatedByLTE applies the LTE predicate on the "updated_by" field.
func UpdatedByLTE(v string) predicate.Internship {
	return predicate.Internship(sql.FieldLTE(FieldUpdatedBy, v))
}

// UpdatedByContains applies the Contains predicate on the "updated_by" field.
func UpdatedByContains(v string) predicate.Internship {
	return predicate.Internship(sql.FieldContains(FieldUpdatedBy, v))
}

// UpdatedByHasPrefix applies the HasPrefix predicate on the "updated_by" field.
func UpdatedByHasPrefix(v string) predicate.Internship {
	return predicate.Internship(sql.FieldHasPrefix(FieldUpdatedBy, v))
}

// UpdatedByHasSuffix applies the HasSuffix predicate on the "updated_by" field.
func UpdatedByHasSuffix(v string) predicate.Internship {
	return predicate.Internship(sql.FieldHasSuffix(FieldUpdatedBy, v))
}

// UpdatedByIsNil applies the IsNil predicate on the "updated_by" field.
func UpdatedByIsNil() predicate.Internship {
	return predicate.Internship(sql.FieldIsNull(FieldUpdatedBy))
}

// UpdatedByNotNil applies the NotNil predicate on the "updated_by" field.
func UpdatedByNotNil() predicate.Internship {
	return predicate.Internship(sql.FieldNotNull(FieldUpdatedBy))
}

// UpdatedByEqualFold applies the EqualFold predicate on the "updated_by" field.
func UpdatedByEqualFold(v string) predicate.Internship {
	return predicate.Internship(sql.FieldEqualFold(FieldUpdatedBy, v))
}

// UpdatedByContainsFold applies the ContainsFold predicate on the "updated_by" field.
func UpdatedByContainsFold(v string) predicate.Internship {
	return predicate.Internship(sql.FieldContainsFold(FieldUpdatedBy, v))
}

// TitleEQ applies the EQ predicate on the "title" field.
func TitleEQ(v string) predicate.Internship {
	return predicate.Internship(sql.FieldEQ(FieldTitle, v))
}

// TitleNEQ applies the NEQ predicate on the "title" field.
func TitleNEQ(v string) predicate.Internship {
	return predicate.Internship(sql.FieldNEQ(FieldTitle, v))
}

// TitleIn applies the In predicate on the "title" field.
func TitleIn(vs ...string) predicate.Internship {
	return predicate.Internship(sql.FieldIn(FieldTitle, vs...))
}

// TitleNotIn applies the NotIn predicate on the "title" field.
func TitleNotIn(vs ...string) predicate.Internship {
	return predicate.Internship(sql.FieldNotIn(FieldTitle, vs...))
}

// TitleGT applies the GT predicate on the "title" field.
func TitleGT(v string) predicate.Internship {
	return predicate.Internship(sql.FieldGT(FieldTitle, v))
}

// TitleGTE applies the GTE predicate on the "title" field.
func TitleGTE(v string) predicate.Internship {
	return predicate.Internship(sql.FieldGTE(FieldTitle, v))
}

// TitleLT applies the LT predicate on the "title" field.
func TitleLT(v string) predicate.Internship {
	return predicate.Internship(sql.FieldLT(FieldTitle, v))
}

// TitleLTE applies the LTE predicate on the "title" field.
func TitleLTE(v string) predicate.Internship {
	return predicate.Internship(sql.FieldLTE(FieldTitle, v))
}

// TitleContains applies the Contains predicate on the "title" field.
func TitleContains(v string) predicate.Internship {
	return predicate.Internship(sql.FieldContains(FieldTitle, v))
}

// TitleHasPrefix applies the HasPrefix predicate on the "title" field.
func TitleHasPrefix(v string) predicate.Internship {
	return predicate.Internship(sql.FieldHasPrefix(FieldTitle, v))
}

// TitleHasSuffix applies the HasSuffix predicate on the "title" field.
func TitleHasSuffix(v string) predicate.Internship {
	return predicate.Internship(sql.FieldHasSuffix(FieldTitle, v))
}

// TitleEqualFold applies the EqualFold predicate on the "title" field.
func TitleEqualFold(v string) predicate.Internship {
	return predicate.Internship(sql.FieldEqualFold(FieldTitle, v))
}

// TitleContainsFold applies the ContainsFold predicate on the "title" field.
func TitleContainsFold(v string) predicate.Internship {
	return predicate.Internship(sql.FieldContainsFold(FieldTitle, v))
}

// LookupKeyEQ applies the EQ predicate on the "lookup_key" field.
func LookupKeyEQ(v string) predicate.Internship {
	return predicate.Internship(sql.FieldEQ(FieldLookupKey, v))
}

// LookupKeyNEQ applies the NEQ predicate on the "lookup_key" field.
func LookupKeyNEQ(v string) predicate.Internship {
	return predicate.Internship(sql.FieldNEQ(FieldLookupKey, v))
}

// LookupKeyIn applies the In predicate on the "lookup_key" field.
func LookupKeyIn(vs ...string) predicate.Internship {
	return predicate.Internship(sql.FieldIn(FieldLookupKey, vs...))
}

// LookupKeyNotIn applies the NotIn predicate on the "lookup_key" field.
func LookupKeyNotIn(vs ...string) predicate.Internship {
	return predicate.Internship(sql.FieldNotIn(FieldLookupKey, vs...))
}

// LookupKeyGT applies the GT predicate on the "lookup_key" field.
func LookupKeyGT(v string) predicate.Internship {
	return predicate.Internship(sql.FieldGT(FieldLookupKey, v))
}

// LookupKeyGTE applies the GTE predicate on the "lookup_key" field.
func LookupKeyGTE(v string) predicate.Internship {
	return predicate.Internship(sql.FieldGTE(FieldLookupKey, v))
}

// LookupKeyLT applies the LT predicate on the "lookup_key" field.
func LookupKeyLT(v string) predicate.Internship {
	return predicate.Internship(sql.FieldLT(FieldLookupKey, v))
}

// LookupKeyLTE applies the LTE predicate on the "lookup_key" field.
func LookupKeyLTE(v string) predicate.Internship {
	return predicate.Internship(sql.FieldLTE(FieldLookupKey, v))
}

// LookupKeyContains applies the Contains predicate on the "lookup_key" field.
func LookupKeyContains(v string) predicate.Internship {
	return predicate.Internship(sql.FieldContains(FieldLookupKey, v))
}

// LookupKeyHasPrefix applies the HasPrefix predicate on the "lookup_key" field.
func LookupKeyHasPrefix(v string) predicate.Internship {
	return predicate.Internship(sql.FieldHasPrefix(FieldLookupKey, v))
}

// LookupKeyHasSuffix applies the HasSuffix predicate on the "lookup_key" field.
func LookupKeyHasSuffix(v string) predicate.Internship {
	return predicate.Internship(sql.FieldHasSuffix(FieldLookupKey, v))
}

// LookupKeyEqualFold applies the EqualFold predicate on the "lookup_key" field.
func LookupKeyEqualFold(v string) predicate.Internship {
	return predicate.Internship(sql.FieldEqualFold(FieldLookupKey, v))
}

// LookupKeyContainsFold applies the ContainsFold predicate on the "lookup_key" field.
func LookupKeyContainsFold(v string) predicate.Internship {
	return predicate.Internship(sql.FieldContainsFold(FieldLookupKey, v))
}

// DescriptionEQ applies the EQ predicate on the "description" field.
func DescriptionEQ(v string) predicate.Internship {
	return predicate.Internship(sql.FieldEQ(FieldDescription, v))
}

// DescriptionNEQ applies the NEQ predicate on the "description" field.
func DescriptionNEQ(v string) predicate.Internship {
	return predicate.Internship(sql.FieldNEQ(FieldDescription, v))
}

// DescriptionIn applies the In predicate on the "description" field.
func DescriptionIn(vs ...string) predicate.Internship {
	return predicate.Internship(sql.FieldIn(FieldDescription, vs...))
}

// DescriptionNotIn applies the NotIn predicate on the "description" field.
func DescriptionNotIn(vs ...string) predicate.Internship {
	return predicate.Internship(sql.FieldNotIn(FieldDescription, vs...))
}

// DescriptionGT applies the GT predicate on the "description" field.
func DescriptionGT(v string) predicate.Internship {
	return predicate.Internship(sql.FieldGT(FieldDescription, v))
}

// DescriptionGTE applies the GTE predicate on the "description" field.
func DescriptionGTE(v string) predicate.Internship {
	return predicate.Internship(sql.FieldGTE(FieldDescription, v))
}

// DescriptionLT applies the LT predicate on the "description" field.
func DescriptionLT(v string) predicate.Internship {
	return predicate.Internship(sql.FieldLT(FieldDescription, v))
}

// DescriptionLTE applies the LTE predicate on the "description" field.
func DescriptionLTE(v string) predicate.Internship {
	return predicate.Internship(sql.FieldLTE(FieldDescription, v))
}

// DescriptionContains applies the Contains predicate on the "description" field.
func DescriptionContains(v string) predicate.Internship {
	return predicate.Internship(sql.FieldContains(FieldDescription, v))
}

// DescriptionHasPrefix applies the HasPrefix predicate on the "description" field.
func DescriptionHasPrefix(v string) predicate.Internship {
	return predicate.Internship(sql.FieldHasPrefix(FieldDescription, v))
}

// DescriptionHasSuffix applies the HasSuffix predicate on the "description" field.
func DescriptionHasSuffix(v string) predicate.Internship {
	return predicate.Internship(sql.FieldHasSuffix(FieldDescription, v))
}

// DescriptionEqualFold applies the EqualFold predicate on the "description" field.
func DescriptionEqualFold(v string) predicate.Internship {
	return predicate.Internship(sql.FieldEqualFold(FieldDescription, v))
}

// DescriptionContainsFold applies the ContainsFold predicate on the "description" field.
func DescriptionContainsFold(v string) predicate.Internship {
	return predicate.Internship(sql.FieldContainsFold(FieldDescription, v))
}

// SkillsIsNil applies the IsNil predicate on the "skills" field.
func SkillsIsNil() predicate.Internship {
	return predicate.Internship(sql.FieldIsNull(FieldSkills))
}

// SkillsNotNil applies the NotNil predicate on the "skills" field.
func SkillsNotNil() predicate.Internship {
	return predicate.Internship(sql.FieldNotNull(FieldSkills))
}

// LevelEQ applies the EQ predicate on the "level" field.
func LevelEQ(v string) predicate.Internship {
	return predicate.Internship(sql.FieldEQ(FieldLevel, v))
}

// LevelNEQ applies the NEQ predicate on the "level" field.
func LevelNEQ(v string) predicate.Internship {
	return predicate.Internship(sql.FieldNEQ(FieldLevel, v))
}

// LevelIn applies the In predicate on the "level" field.
func LevelIn(vs ...string) predicate.Internship {
	return predicate.Internship(sql.FieldIn(FieldLevel, vs...))
}

// LevelNotIn applies the NotIn predicate on the "level" field.
func LevelNotIn(vs ...string) predicate.Internship {
	return predicate.Internship(sql.FieldNotIn(FieldLevel, vs...))
}

// LevelGT applies the GT predicate on the "level" field.
func LevelGT(v string) predicate.Internship {
	return predicate.Internship(sql.FieldGT(FieldLevel, v))
}

// LevelGTE applies the GTE predicate on the "level" field.
func LevelGTE(v string) predicate.Internship {
	return predicate.Internship(sql.FieldGTE(FieldLevel, v))
}

// LevelLT applies the LT predicate on the "level" field.
func LevelLT(v string) predicate.Internship {
	return predicate.Internship(sql.FieldLT(FieldLevel, v))
}

// LevelLTE applies the LTE predicate on the "level" field.
func LevelLTE(v string) predicate.Internship {
	return predicate.Internship(sql.FieldLTE(FieldLevel, v))
}

// LevelContains applies the Contains predicate on the "level" field.
func LevelContains(v string) predicate.Internship {
	return predicate.Internship(sql.FieldContains(FieldLevel, v))
}

// LevelHasPrefix applies the HasPrefix predicate on the "level" field.
func LevelHasPrefix(v string) predicate.Internship {
	return predicate.Internship(sql.FieldHasPrefix(FieldLevel, v))
}

// LevelHasSuffix applies the HasSuffix predicate on the "level" field.
func LevelHasSuffix(v string) predicate.Internship {
	return predicate.Internship(sql.FieldHasSuffix(FieldLevel, v))
}

// LevelIsNil applies the IsNil predicate on the "level" field.
func LevelIsNil() predicate.Internship {
	return predicate.Internship(sql.FieldIsNull(FieldLevel))
}

// LevelNotNil applies the NotNil predicate on the "level" field.
func LevelNotNil() predicate.Internship {
	return predicate.Internship(sql.FieldNotNull(FieldLevel))
}

// LevelEqualFold applies the EqualFold predicate on the "level" field.
func LevelEqualFold(v string) predicate.Internship {
	return predicate.Internship(sql.FieldEqualFold(FieldLevel, v))
}

// LevelContainsFold applies the ContainsFold predicate on the "level" field.
func LevelContainsFold(v string) predicate.Internship {
	return predicate.Internship(sql.FieldContainsFold(FieldLevel, v))
}

// ModeEQ applies the EQ predicate on the "mode" field.
func ModeEQ(v string) predicate.Internship {
	return predicate.Internship(sql.FieldEQ(FieldMode, v))
}

// ModeNEQ applies the NEQ predicate on the "mode" field.
func ModeNEQ(v string) predicate.Internship {
	return predicate.Internship(sql.FieldNEQ(FieldMode, v))
}

// ModeIn applies the In predicate on the "mode" field.
func ModeIn(vs ...string) predicate.Internship {
	return predicate.Internship(sql.FieldIn(FieldMode, vs...))
}

// ModeNotIn applies the NotIn predicate on the "mode" field.
func ModeNotIn(vs ...string) predicate.Internship {
	return predicate.Internship(sql.FieldNotIn(FieldMode, vs...))
}

// ModeGT applies the GT predicate on the "mode" field.
func ModeGT(v string) predicate.Internship {
	return predicate.Internship(sql.FieldGT(FieldMode, v))
}

// ModeGTE applies the GTE predicate on the "mode" field.
func ModeGTE(v string) predicate.Internship {
	return predicate.Internship(sql.FieldGTE(FieldMode, v))
}

// ModeLT applies the LT predicate on the "mode" field.
func ModeLT(v string) predicate.Internship {
	return predicate.Internship(sql.FieldLT(FieldMode, v))
}

// ModeLTE applies the LTE predicate on the "mode" field.
func ModeLTE(v string) predicate.Internship {
	return predicate.Internship(sql.FieldLTE(FieldMode, v))
}

// ModeContains applies the Contains predicate on the "mode" field.
func ModeContains(v string) predicate.Internship {
	return predicate.Internship(sql.FieldContains(FieldMode, v))
}

// ModeHasPrefix applies the HasPrefix predicate on the "mode" field.
func ModeHasPrefix(v string) predicate.Internship {
	return predicate.Internship(sql.FieldHasPrefix(FieldMode, v))
}

// ModeHasSuffix applies the HasSuffix predicate on the "mode" field.
func ModeHasSuffix(v string) predicate.Internship {
	return predicate.Internship(sql.FieldHasSuffix(FieldMode, v))
}

// ModeEqualFold applies the EqualFold predicate on the "mode" field.
func ModeEqualFold(v string) predicate.Internship {
	return predicate.Internship(sql.FieldEqualFold(FieldMode, v))
}

// ModeContainsFold applies the ContainsFold predicate on the "mode" field.
func ModeContainsFold(v string) predicate.Internship {
	return predicate.Internship(sql.FieldContainsFold(FieldMode, v))
}

// DurationInWeeksEQ applies the EQ predicate on the "duration_in_weeks" field.
func DurationInWeeksEQ(v int) predicate.Internship {
	return predicate.Internship(sql.FieldEQ(FieldDurationInWeeks, v))
}

// DurationInWeeksNEQ applies the NEQ predicate on the "duration_in_weeks" field.
func DurationInWeeksNEQ(v int) predicate.Internship {
	return predicate.Internship(sql.FieldNEQ(FieldDurationInWeeks, v))
}

// DurationInWeeksIn applies the In predicate on the "duration_in_weeks" field.
func DurationInWeeksIn(vs ...int) predicate.Internship {
	return predicate.Internship(sql.FieldIn(FieldDurationInWeeks, vs...))
}

// DurationInWeeksNotIn applies the NotIn predicate on the "duration_in_weeks" field.
func DurationInWeeksNotIn(vs ...int) predicate.Internship {
	return predicate.Internship(sql.FieldNotIn(FieldDurationInWeeks, vs...))
}

// DurationInWeeksGT applies the GT predicate on the "duration_in_weeks" field.
func DurationInWeeksGT(v int) predicate.Internship {
	return predicate.Internship(sql.FieldGT(FieldDurationInWeeks, v))
}

// DurationInWeeksGTE applies the GTE predicate on the "duration_in_weeks" field.
func DurationInWeeksGTE(v int) predicate.Internship {
	return predicate.Internship(sql.FieldGTE(FieldDurationInWeeks, v))
}

// DurationInWeeksLT applies the LT predicate on the "duration_in_weeks" field.
func DurationInWeeksLT(v int) predicate.Internship {
	return predicate.Internship(sql.FieldLT(FieldDurationInWeeks, v))
}

// DurationInWeeksLTE applies the LTE predicate on the "duration_in_weeks" field.
func DurationInWeeksLTE(v int) predicate.Internship {
	return predicate.Internship(sql.FieldLTE(FieldDurationInWeeks, v))
}

// DurationInWeeksIsNil applies the IsNil predicate on the "duration_in_weeks" field.
func DurationInWeeksIsNil() predicate.Internship {
	return predicate.Internship(sql.FieldIsNull(FieldDurationInWeeks))
}

// DurationInWeeksNotNil applies the NotNil predicate on the "duration_in_weeks" field.
func DurationInWeeksNotNil() predicate.Internship {
	return predicate.Internship(sql.FieldNotNull(FieldDurationInWeeks))
}

// LearningOutcomesIsNil applies the IsNil predicate on the "learning_outcomes" field.
func LearningOutcomesIsNil() predicate.Internship {
	return predicate.Internship(sql.FieldIsNull(FieldLearningOutcomes))
}

// LearningOutcomesNotNil applies the NotNil predicate on the "learning_outcomes" field.
func LearningOutcomesNotNil() predicate.Internship {
	return predicate.Internship(sql.FieldNotNull(FieldLearningOutcomes))
}

// PrerequisitesIsNil applies the IsNil predicate on the "prerequisites" field.
func PrerequisitesIsNil() predicate.Internship {
	return predicate.Internship(sql.FieldIsNull(FieldPrerequisites))
}

// PrerequisitesNotNil applies the NotNil predicate on the "prerequisites" field.
func PrerequisitesNotNil() predicate.Internship {
	return predicate.Internship(sql.FieldNotNull(FieldPrerequisites))
}

// BenefitsIsNil applies the IsNil predicate on the "benefits" field.
func BenefitsIsNil() predicate.Internship {
	return predicate.Internship(sql.FieldIsNull(FieldBenefits))
}

// BenefitsNotNil applies the NotNil predicate on the "benefits" field.
func BenefitsNotNil() predicate.Internship {
	return predicate.Internship(sql.FieldNotNull(FieldBenefits))
}

// CurrencyEQ applies the EQ predicate on the "currency" field.
func CurrencyEQ(v string) predicate.Internship {
	return predicate.Internship(sql.FieldEQ(FieldCurrency, v))
}

// CurrencyNEQ applies the NEQ predicate on the "currency" field.
func CurrencyNEQ(v string) predicate.Internship {
	return predicate.Internship(sql.FieldNEQ(FieldCurrency, v))
}

// CurrencyIn applies the In predicate on the "currency" field.
func CurrencyIn(vs ...string) predicate.Internship {
	return predicate.Internship(sql.FieldIn(FieldCurrency, vs...))
}

// CurrencyNotIn applies the NotIn predicate on the "currency" field.
func CurrencyNotIn(vs ...string) predicate.Internship {
	return predicate.Internship(sql.FieldNotIn(FieldCurrency, vs...))
}

// CurrencyGT applies the GT predicate on the "currency" field.
func CurrencyGT(v string) predicate.Internship {
	return predicate.Internship(sql.FieldGT(FieldCurrency, v))
}

// CurrencyGTE applies the GTE predicate on the "currency" field.
func CurrencyGTE(v string) predicate.Internship {
	return predicate.Internship(sql.FieldGTE(FieldCurrency, v))
}

// CurrencyLT applies the LT predicate on the "currency" field.
func CurrencyLT(v string) predicate.Internship {
	return predicate.Internship(sql.FieldLT(FieldCurrency, v))
}

// CurrencyLTE applies the LTE predicate on the "currency" field.
func CurrencyLTE(v string) predicate.Internship {
	return predicate.Internship(sql.FieldLTE(FieldCurrency, v))
}

// CurrencyContains applies the Contains predicate on the "currency" field.
func CurrencyContains(v string) predicate.Internship {
	return predicate.Internship(sql.FieldContains(FieldCurrency, v))
}

// CurrencyHasPrefix applies the HasPrefix predicate on the "currency" field.
func CurrencyHasPrefix(v string) predicate.Internship {
	return predicate.Internship(sql.FieldHasPrefix(FieldCurrency, v))
}

// CurrencyHasSuffix applies the HasSuffix predicate on the "currency" field.
func CurrencyHasSuffix(v string) predicate.Internship {
	return predicate.Internship(sql.FieldHasSuffix(FieldCurrency, v))
}

// CurrencyIsNil applies the IsNil predicate on the "currency" field.
func CurrencyIsNil() predicate.Internship {
	return predicate.Internship(sql.FieldIsNull(FieldCurrency))
}

// CurrencyNotNil applies the NotNil predicate on the "currency" field.
func CurrencyNotNil() predicate.Internship {
	return predicate.Internship(sql.FieldNotNull(FieldCurrency))
}

// CurrencyEqualFold applies the EqualFold predicate on the "currency" field.
func CurrencyEqualFold(v string) predicate.Internship {
	return predicate.Internship(sql.FieldEqualFold(FieldCurrency, v))
}

// CurrencyContainsFold applies the ContainsFold predicate on the "currency" field.
func CurrencyContainsFold(v string) predicate.Internship {
	return predicate.Internship(sql.FieldContainsFold(FieldCurrency, v))
}

// PriceEQ applies the EQ predicate on the "price" field.
func PriceEQ(v decimal.Decimal) predicate.Internship {
	return predicate.Internship(sql.FieldEQ(FieldPrice, v))
}

// PriceNEQ applies the NEQ predicate on the "price" field.
func PriceNEQ(v decimal.Decimal) predicate.Internship {
	return predicate.Internship(sql.FieldNEQ(FieldPrice, v))
}

// PriceIn applies the In predicate on the "price" field.
func PriceIn(vs ...decimal.Decimal) predicate.Internship {
	return predicate.Internship(sql.FieldIn(FieldPrice, vs...))
}

// PriceNotIn applies the NotIn predicate on the "price" field.
func PriceNotIn(vs ...decimal.Decimal) predicate.Internship {
	return predicate.Internship(sql.FieldNotIn(FieldPrice, vs...))
}

// PriceGT applies the GT predicate on the "price" field.
func PriceGT(v decimal.Decimal) predicate.Internship {
	return predicate.Internship(sql.FieldGT(FieldPrice, v))
}

// PriceGTE applies the GTE predicate on the "price" field.
func PriceGTE(v decimal.Decimal) predicate.Internship {
	return predicate.Internship(sql.FieldGTE(FieldPrice, v))
}

// PriceLT applies the LT predicate on the "price" field.
func PriceLT(v decimal.Decimal) predicate.Internship {
	return predicate.Internship(sql.FieldLT(FieldPrice, v))
}

// PriceLTE applies the LTE predicate on the "price" field.
func PriceLTE(v decimal.Decimal) predicate.Internship {
	return predicate.Internship(sql.FieldLTE(FieldPrice, v))
}

// PriceIsNil applies the IsNil predicate on the "price" field.
func PriceIsNil() predicate.Internship {
	return predicate.Internship(sql.FieldIsNull(FieldPrice))
}

// PriceNotNil applies the NotNil predicate on the "price" field.
func PriceNotNil() predicate.Internship {
	return predicate.Internship(sql.FieldNotNull(FieldPrice))
}

// FlatDiscountEQ applies the EQ predicate on the "flat_discount" field.
func FlatDiscountEQ(v decimal.Decimal) predicate.Internship {
	return predicate.Internship(sql.FieldEQ(FieldFlatDiscount, v))
}

// FlatDiscountNEQ applies the NEQ predicate on the "flat_discount" field.
func FlatDiscountNEQ(v decimal.Decimal) predicate.Internship {
	return predicate.Internship(sql.FieldNEQ(FieldFlatDiscount, v))
}

// FlatDiscountIn applies the In predicate on the "flat_discount" field.
func FlatDiscountIn(vs ...decimal.Decimal) predicate.Internship {
	return predicate.Internship(sql.FieldIn(FieldFlatDiscount, vs...))
}

// FlatDiscountNotIn applies the NotIn predicate on the "flat_discount" field.
func FlatDiscountNotIn(vs ...decimal.Decimal) predicate.Internship {
	return predicate.Internship(sql.FieldNotIn(FieldFlatDiscount, vs...))
}

// FlatDiscountGT applies the GT predicate on the "flat_discount" field.
func FlatDiscountGT(v decimal.Decimal) predicate.Internship {
	return predicate.Internship(sql.FieldGT(FieldFlatDiscount, v))
}

// FlatDiscountGTE applies the GTE predicate on the "flat_discount" field.
func FlatDiscountGTE(v decimal.Decimal) predicate.Internship {
	return predicate.Internship(sql.FieldGTE(FieldFlatDiscount, v))
}

// FlatDiscountLT applies the LT predicate on the "flat_discount" field.
func FlatDiscountLT(v decimal.Decimal) predicate.Internship {
	return predicate.Internship(sql.FieldLT(FieldFlatDiscount, v))
}

// FlatDiscountLTE applies the LTE predicate on the "flat_discount" field.
func FlatDiscountLTE(v decimal.Decimal) predicate.Internship {
	return predicate.Internship(sql.FieldLTE(FieldFlatDiscount, v))
}

// FlatDiscountIsNil applies the IsNil predicate on the "flat_discount" field.
func FlatDiscountIsNil() predicate.Internship {
	return predicate.Internship(sql.FieldIsNull(FieldFlatDiscount))
}

// FlatDiscountNotNil applies the NotNil predicate on the "flat_discount" field.
func FlatDiscountNotNil() predicate.Internship {
	return predicate.Internship(sql.FieldNotNull(FieldFlatDiscount))
}

// PercentageDiscountEQ applies the EQ predicate on the "percentage_discount" field.
func PercentageDiscountEQ(v decimal.Decimal) predicate.Internship {
	return predicate.Internship(sql.FieldEQ(FieldPercentageDiscount, v))
}

// PercentageDiscountNEQ applies the NEQ predicate on the "percentage_discount" field.
func PercentageDiscountNEQ(v decimal.Decimal) predicate.Internship {
	return predicate.Internship(sql.FieldNEQ(FieldPercentageDiscount, v))
}

// PercentageDiscountIn applies the In predicate on the "percentage_discount" field.
func PercentageDiscountIn(vs ...decimal.Decimal) predicate.Internship {
	return predicate.Internship(sql.FieldIn(FieldPercentageDiscount, vs...))
}

// PercentageDiscountNotIn applies the NotIn predicate on the "percentage_discount" field.
func PercentageDiscountNotIn(vs ...decimal.Decimal) predicate.Internship {
	return predicate.Internship(sql.FieldNotIn(FieldPercentageDiscount, vs...))
}

// PercentageDiscountGT applies the GT predicate on the "percentage_discount" field.
func PercentageDiscountGT(v decimal.Decimal) predicate.Internship {
	return predicate.Internship(sql.FieldGT(FieldPercentageDiscount, v))
}

// PercentageDiscountGTE applies the GTE predicate on the "percentage_discount" field.
func PercentageDiscountGTE(v decimal.Decimal) predicate.Internship {
	return predicate.Internship(sql.FieldGTE(FieldPercentageDiscount, v))
}

// PercentageDiscountLT applies the LT predicate on the "percentage_discount" field.
func PercentageDiscountLT(v decimal.Decimal) predicate.Internship {
	return predicate.Internship(sql.FieldLT(FieldPercentageDiscount, v))
}

// PercentageDiscountLTE applies the LTE predicate on the "percentage_discount" field.
func PercentageDiscountLTE(v decimal.Decimal) predicate.Internship {
	return predicate.Internship(sql.FieldLTE(FieldPercentageDiscount, v))
}

// PercentageDiscountIsNil applies the IsNil predicate on the "percentage_discount" field.
func PercentageDiscountIsNil() predicate.Internship {
	return predicate.Internship(sql.FieldIsNull(FieldPercentageDiscount))
}

// PercentageDiscountNotNil applies the NotNil predicate on the "percentage_discount" field.
func PercentageDiscountNotNil() predicate.Internship {
	return predicate.Internship(sql.FieldNotNull(FieldPercentageDiscount))
}

// HasCategories applies the HasEdge predicate on the "categories" edge.
func HasCategories() predicate.Internship {
	return predicate.Internship(func(s *sql.Selector) {
		step := sqlgraph.NewStep(
			sqlgraph.From(Table, FieldID),
			sqlgraph.Edge(sqlgraph.O2M, false, CategoriesTable, CategoriesColumn),
		)
		sqlgraph.HasNeighbors(s, step)
	})
}

// HasCategoriesWith applies the HasEdge predicate on the "categories" edge with a given conditions (other predicates).
func HasCategoriesWith(preds ...predicate.Category) predicate.Internship {
	return predicate.Internship(func(s *sql.Selector) {
		step := newCategoriesStep()
		sqlgraph.HasNeighborsWith(s, step, func(s *sql.Selector) {
			for _, p := range preds {
				p(s)
			}
		})
	})
}

// And groups predicates with the AND operator between them.
func And(predicates ...predicate.Internship) predicate.Internship {
	return predicate.Internship(sql.AndPredicates(predicates...))
}

// Or groups predicates with the OR operator between them.
func Or(predicates ...predicate.Internship) predicate.Internship {
	return predicate.Internship(sql.OrPredicates(predicates...))
}

// Not applies the not operator on the given predicate.
func Not(p predicate.Internship) predicate.Internship {
	return predicate.Internship(sql.NotPredicates(p))
}
